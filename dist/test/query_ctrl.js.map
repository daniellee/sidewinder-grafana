{"version":3,"sources":["../../src/query_ctrl.js"],"names":["GenericDatasourceQueryCtrl","$scope","$injector","scope","target","type","raw","filters","aggregator","name","args","index","value","unit","console","log","rawQuery","panelCtrl","refresh","datasource","metricFindQuery","then","uiSegmentSrv","transformToSegments","res","tagFindQuery","conditionTypes","fieldOptionsQuery","getAggregators","getUnits","length","push","aggregators","segment","splice","templateUrl"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;IAEaA,0B,WAAAA,0B;;;AAEX,sCAAYC,MAAZ,EAAoBC,SAApB,EAAgC;AAAA;;AAAA,wJACxBD,MADwB,EAChBC,SADgB;;AAG9B,UAAKC,KAAL,GAAaF,MAAb;AACA,UAAKG,MAAL,CAAYA,MAAZ,GAAqB,MAAKA,MAAL,CAAYA,MAAjC;AACA,UAAKA,MAAL,CAAYC,IAAZ,GAAmB,WAAnB;AACA,QAAG,CAAC,MAAKD,MAAL,CAAYE,GAAhB,EAAqB;AACnB,YAAKF,MAAL,CAAYE,GAAZ,GAAkB,EAAlB;AACD;AACD,QAAG,CAAC,MAAKF,MAAL,CAAYG,OAAhB,EAAyB;AACvB,YAAKH,MAAL,CAAYG,OAAZ,GAAsB,EAAtB;AACD;AACD,QAAG,CAAC,MAAKH,MAAL,CAAYI,UAAhB,EAA4B;AAC1B,YAAKJ,MAAL,CAAYI,UAAZ,GAAyB,EAAEC,MAAK,MAAP,EAAeC,MAAK,CAAC,EAAEC,OAAM,CAAR,EAAWN,MAAM,KAAjB,EAAwBO,OAAO,IAA/B,EAAD,CAApB,EAA6DC,MAAM,MAAnE,EAAzB;AACD;AACDC,YAAQC,GAAR,CAAY,MAAKX,MAAjB;AAf8B;AAgB/B;;;;uCAEkB;AACjB,WAAKA,MAAL,CAAYY,QAAZ,GAAuB,CAAC,KAAKZ,MAAL,CAAYY,QAApC;AACD;;;uCAEkB;AACjB,WAAKC,SAAL,CAAeC,OAAf,GADiB,CACS;AAC3B;;;iCAEY;AACX,aAAO,KAAKC,UAAL,CAAgBC,eAAhB,CAAgC,KAAKhB,MAArC,EAA6CiB,IAA7C,CAAkD,KAAKC,YAAL,CAAkBC,mBAAlB,CAAsC,KAAtC,CAAlD,CAAP;AACD;;;oCAEe;AACf,UAAIC,MAAM,KAAKL,UAAL,CAAgBM,YAAhB,CAA6B,KAAKrB,MAAlC,EAA0CiB,IAA1C,CAA+C,KAAKC,YAAL,CAAkBC,mBAAlB,CAAsC,KAAtC,CAA/C,CAAV;AACA,aAAOC,GAAP;AACA;;;0CAEqB;AACpB,aAAO,KAAKL,UAAL,CAAgBO,cAAhB,CAA+B,KAAKtB,MAApC,EAA4CiB,IAA5C,CAAiD,KAAKC,YAAL,CAAkBC,mBAAlB,CAAsC,KAAtC,CAAjD,CAAP;AACD;;;sCAEiB;AACjB,aAAO,KAAKJ,UAAL,CAAgBQ,iBAAhB,CAAkC,KAAKvB,MAAvC,EAA+CiB,IAA/C,CAAoD,KAAKC,YAAL,CAAkBC,mBAAlB,CAAsC,KAAtC,CAApD,CAAP;AACA;;;qCAEgB;AACf,aAAO,KAAKJ,UAAL,CAAgBS,cAAhB,CAA+B,KAAKxB,MAApC,EAA4CiB,IAA5C,CAAiD,KAAKC,YAAL,CAAkBC,mBAAlB,CAAsC,KAAtC,CAAjD,CAAP;AACD;;;+BAEU;AACT,aAAO,KAAKJ,UAAL,CAAgBU,QAAhB,CAAyB,KAAKzB,MAA9B,EAAsCiB,IAAtC,CAA2C,KAAKC,YAAL,CAAkBC,mBAAlB,CAAsC,KAAtC,CAA3C,CAAP;AACD;;;qCAEgB;AACf,WAAKnB,MAAL,CAAYI,UAAZ,GAAyB,EAAzB;AACD;;;gCAEW;AACV,UAAG,KAAKJ,MAAL,CAAYG,OAAZ,CAAoBuB,MAApB,GAA2B,CAA9B,EAAiC;AAC/B,aAAK1B,MAAL,CAAYG,OAAZ,CAAoBwB,IAApB,CAAyB,EAAC,QAAO,WAAR,EAAqB,SAAQ,KAA7B,EAAzB;AACD;AACD,WAAK3B,MAAL,CAAYG,OAAZ,CAAoBwB,IAApB,CAAyB,EAAzB;AACA,WAAKd,SAAL,CAAeC,OAAf;AACD;;;8BAES;AACR,UAAG,KAAKd,MAAL,CAAY4B,WAAZ,CAAwBvB,IAAxB,IAAgC,CAAC,KAAKL,MAAL,CAAY4B,WAAZ,CAAwBtB,IAA5D,EAAkE;AAChE,aAAKN,MAAL,CAAY4B,WAAZ,CAAwBtB,IAAxB,GAA+B,EAA/B;AACD;AACD,WAAKN,MAAL,CAAY4B,WAAZ,CAAwBtB,IAAxB,CAA6BqB,IAA7B,CAAkC,EAAlC;AACA,WAAKd,SAAL,CAAeC,OAAf;AACD;;;iCAEYP,K,EAAOsB,O,EAAS;AAC3B,WAAK7B,MAAL,CAAYG,OAAZ,CAAoB2B,MAApB,CAA2BvB,KAA3B,EAAkC,CAAlC;AACA,UAAGA,QAAM,CAAN,IAAYA,SAAO,CAAP,IAAY,KAAKP,MAAL,CAAYG,OAAZ,CAAoBuB,MAApB,GAA2B,CAAtD,EAA0D;AACxD,aAAK1B,MAAL,CAAYG,OAAZ,CAAoB2B,MAApB,CAA2BvB,KAA3B,EAAkC,CAAlC;AACD;AACD,UAAGA,SAAO,KAAKP,MAAL,CAAYG,OAAZ,CAAoBuB,MAA9B,EAAsC;AACpC,aAAK1B,MAAL,CAAYG,OAAZ,CAAoB2B,MAApB,CAA2B,KAAK9B,MAAL,CAAYG,OAAZ,CAAoBuB,MAApB,GAA2B,CAAtD,EAAyD,CAAzD;AACD;AACD,WAAKb,SAAL,CAAeC,OAAf;AACD;;;mCAEcP,K,EAAOsB,O,EAAS;AAC7B,WAAK7B,MAAL,CAAYG,OAAZ,CAAoBI,KAApB,IAA6BsB,OAA7B;AACE,WAAKhB,SAAL,CAAeC,OAAf,GAF2B,CAED;AAC7B;;;;;;AAGHlB,2BAA2BmC,WAA3B,GAAyC,4BAAzC","file":"query_ctrl.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\r\nimport './css/query-editor.css!'\r\n\r\nexport class GenericDatasourceQueryCtrl extends QueryCtrl {\r\n\r\n  constructor($scope, $injector)  {\r\n    super($scope, $injector);\r\n\r\n    this.scope = $scope;\r\n    this.target.target = this.target.target;\r\n    this.target.type = 'timeserie';\r\n    if(!this.target.raw) {\r\n      this.target.raw = '';\r\n    }\r\n    if(!this.target.filters) {\r\n      this.target.filters = [];\r\n    }\r\n    if(!this.target.aggregator) {\r\n      this.target.aggregator = { name:\"none\", args:[{ index:0, type: \"int\", value: 1000 }], unit: \"secs\" };\r\n    }\r\n    console.log(this.target);\r\n  }\r\n\r\n  toggleEditorMode() {\r\n    this.target.rawQuery = !this.target.rawQuery;\r\n  }\r\n\r\n  onChangeInternal() {\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  getOptions() {\r\n    return this.datasource.metricFindQuery(this.target).then(this.uiSegmentSrv.transformToSegments(false));\r\n  }\r\n\r\n  getTagOptions() {\r\n   var res = this.datasource.tagFindQuery(this.target).then(this.uiSegmentSrv.transformToSegments(false));\r\n   return res;\r\n  }\r\n\r\n  getConditionOptions() {\r\n    return this.datasource.conditionTypes(this.target).then(this.uiSegmentSrv.transformToSegments(false));\r\n  }\r\n\r\n  getFieldOptions() {\r\n   return this.datasource.fieldOptionsQuery(this.target).then(this.uiSegmentSrv.transformToSegments(false));\r\n  }\r\n\r\n  getAggregators() {\r\n    return this.datasource.getAggregators(this.target).then(this.uiSegmentSrv.transformToSegments(false));\r\n  }\r\n\r\n  getUnits() {\r\n    return this.datasource.getUnits(this.target).then(this.uiSegmentSrv.transformToSegments(false));\r\n  }\r\n\r\n  getAggregators() {\r\n    this.target.aggregator = {};\r\n  }\r\n\r\n  addFilter() {\r\n    if(this.target.filters.length>0) {\r\n      this.target.filters.push({'type':'condition', 'value':'AND'});\r\n    }\r\n    this.target.filters.push({});\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  addArgs() {\r\n    if(this.target.aggregators.name && !this.target.aggregators.args) {\r\n      this.target.aggregators.args = [];\r\n    }\r\n    this.target.aggregators.args.push({});\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  removeFilter(index, segment) {\r\n    this.target.filters.splice(index, 1)\r\n    if(index>1 || (index==0 && this.target.filters.length>0)) {\r\n      this.target.filters.splice(index, 1);\r\n    }\r\n    if(index>=this.target.filters.length) {\r\n      this.target.filters.splice(this.target.filters.length-1, 1);\r\n    }\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  onChangeFilter(index, segment) {\r\n    this.target.filters[index] = segment;\r\n      this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n}\r\n\r\nGenericDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\r\n"]}
{"version":3,"sources":["../src/query_ctrl.js"],"names":["QueryCtrl","SidewinderDatasourceQueryCtrl","$scope","$injector","scope","target","field","type","raw","filters","aggregator","name","args","index","value","unit","rawQuery","panelCtrl","refresh","datasource","metricFindQuery","res","tagFindQuery","conditionTypes","fieldOptionsQuery","getAggregators","getUnits","length","push","segment","splice","templateUrl"],"mappings":"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","file":"query_ctrl.js","sourcesContent":["/**\r\n * Copyright 2017 Ambud Sharma\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * \t\thttp://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport {QueryCtrl} from 'app/plugins/sdk';\r\nimport './css/query-editor.css!'\r\n\r\nexport class SidewinderDatasourceQueryCtrl extends QueryCtrl {\r\n\r\n  constructor($scope, $injector)  {\r\n    super($scope, $injector);\r\n    this.scope = $scope;\r\n    this.target.target = this.target.target;\r\n    this.target.field = this.target.field;\r\n    this.target.type = 'timeserie';\r\n    if(!this.target.raw) {\r\n      this.target.raw = '';\r\n    }\r\n    if(!this.target.filters) {\r\n      this.target.filters = [];\r\n    }\r\n    if(!this.target.aggregator) {\r\n      this.target.aggregator = { name:\"none\", args:[{ index:0, type: \"int\", value: 10 }], unit: \"secs\" };\r\n    }\r\n  }\r\n\r\n  toggleEditorMode() {\r\n    this.target.rawQuery = !this.target.rawQuery;\r\n  }\r\n\r\n  onChangeInternal() {\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n\r\n  getMeasurementOptions() {\r\n    if (!this.target.target) {\r\n      this.target.target = '';\r\n    }\r\n    return this.datasource.metricFindQuery(this.target);\r\n  }\r\n\r\n  getTagOptions() {\r\n    var res = this.datasource.tagFindQuery(this.target);\r\n    return res;\r\n  }\r\n\r\n  getConditionOptions() {\r\n    return this.datasource.conditionTypes(this.target);\r\n  }\r\n\r\n  getFieldOptions() {\r\n  if (!this.target.field) {\r\n    this.target.field = '';\r\n  }\r\n\r\n   return this.datasource.fieldOptionsQuery(this.target);\r\n  }\r\n\r\n  getAggregators() {\r\n    return this.datasource.getAggregators(this.target);\r\n  }\r\n\r\n  getUnits() {\r\n    return this.datasource.getUnits(this.target);\r\n  }\r\n\r\n  removeAggregator() {\r\n    this.target.aggregator = {};\r\n  }\r\n\r\n  addFilter() {\r\n    if(this.target.filters.length>0) {\r\n      this.target.filters.push({'type':'condition', 'value':'AND'});\r\n    }\r\n    this.target.filters.push({});\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  addArgs() {\r\n    if(this.target.aggregator.name && !this.target.aggregator.args) {\r\n      this.target.aggregator.args = [];\r\n    }\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  removeFilter(index, segment) {\r\n    this.target.filters.splice(index, 1)\r\n    if(index>1 || (index==0 && this.target.filters.length>0)) {\r\n      this.target.filters.splice(index, 1);\r\n    }\r\n    if(index>=this.target.filters.length) {\r\n      this.target.filters.splice(this.target.filters.length-1, 1);\r\n    }\r\n    this.panelCtrl.refresh();\r\n  }\r\n\r\n  onChangeFilter(index, segment) {\r\n    this.target.filters[index] = segment;\r\n    this.panelCtrl.refresh(); // Asks the panel to refresh data.\r\n  }\r\n}\r\n\r\nSidewinderDatasourceQueryCtrl.templateUrl = 'partials/query.editor.html';\r\n"]}